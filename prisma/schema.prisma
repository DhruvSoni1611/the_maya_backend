generator client {
  provider = "prisma-client-js"
  // output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  clerkId   String   @unique
  email     String   @unique
  name      String?
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tokens      Int @default(5)
  audioTokens Int @default(2)

  prompts     Prompt[]
  chats       Chat[]
  podcasts    Podcast[]
  echoHistory EchoHistory[]
}

model Prompt {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  prompt    String
  imageUrl  String
  format    String
  createdAt DateTime @default(now())
}

model Chat {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  messages  Json
  createdAt DateTime @default(now())
}

model Podcast {
  id        String   @id @default(cuid())
  outputUrl String
  audioUrl  String
  pdfUrl    String
  voiceUsed String
  format    String
  createdAt DateTime @default(now())

  userId        String
  user          User          @relation(fields: [userId], references: [id])
  echoHistories EchoHistory[]
}

model EchoHistory {
  id String @id @default(cuid())

  // Relation to Podcast
  podcastId String
  podcast   Podcast @relation(fields: [podcastId], references: [id])

  // Relation to User
  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
}
